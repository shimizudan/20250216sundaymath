---
title: "オンライン整数大辞典(OEIS)に数列を登録してみた！"
author: "清水　団　Dan Shimizu ([@dannchu](https://twitter.com/dannchu)) "
date: "2025/02/16"
jupyter: julia-1.10
format:
  revealjs: 
    theme: simple
---

#### はじめに（自己紹介）


 ![](0011.png)

---


#  1,1,3,6,16,40,54,30,1


---

#### 横山 明日希さんのXのポスト

[横山 明日希（@asunokibou）](https://x.com/asunokibou)さんのXのポストで次のような問題がありました。


 ![](0031.jpeg)

---


#### (1)の答え

:::{.callout-note icon=false}
#### 問題
$$\frac{1}{\fbox{ア}}+\frac{2}{\fbox{イ}}+\frac{3}{\fbox{ウ}}+\frac{4}{\fbox{エ}}+\frac{5}{\fbox{オ}}+\frac{6}{\fbox{カ}}+\frac{7}{\fbox{キ}}=7$$
:::



:::{.callout-note icon=false}
#### 答え
$$\frac{1}{1}+\frac{2}{2}+\frac{3}{3}+\frac{4}{4}+\frac{5}{5}+\frac{6}{6}+\frac{7}{7}=7$$

:::

「他にあるのか？あるとしたら何組あるか？」が気になりました。

---

#### Julia言語の紹介

Juliaは統計処理や科学技術計算、機械学習に強いプログラミング言語といわれています。 例えばStatsBase.jlやDistributions.jlなどのパッケージを使用すると、統計モデリングや仮説検定、回帰分析、時系列分析などの統計処理を行えます。

また，[quarto](https://quarto.org)というパブリッシング・システムを用いてWebページを作成しました。基本`Markdown`で，コードの読み込みも容易です。今回は利用していませんが，新たな数式処理の[typst](https://typst.app)も実装可能です。

---


#### Julia言語で調べてみる
```js
using Combinatorics

X = [i for i =1:9] |> x->permutations(x,7)
Y = []
for x ∈ X
    if sum(i//x[i] for i=1:7) == 7
        push!(Y,x)
    end
end
Y
```
```{julia}
using Combinatorics

X = [i for i =1:9] |> x->permutations(x,7)
Y = []
for x ∈ X
    if sum(i//x[i] for i=1:7) == 7
        push!(Y,x)
    end
end
Y
```

---

#### 例を確認

 
```
[4, 8, 9, 2, 5, 3, 6]
```



:::{.callout-note icon=false}
#### 確認

$$\begin{align}
&\frac{1}{4}+\frac{2}{8}+\frac{3}{9}+\frac{4}{2}+\frac{5}{5}+\frac{6}{3}+\frac{7}{6}
=\frac{1}{4}+\frac{1}{4}+\frac{1}{3}+2+1+2+\frac{7}{6}
=7\end{align}$$

:::



```
[1, 3, 2, 8, 6, 4, 7]
```



:::{.callout-note icon=false}
#### 確認

$$\begin{align}
&\frac{1}{1}+\frac{2}{3}+\frac{3}{2}+\frac{4}{8}+\frac{5}{6}+\frac{6}{4}+\frac{7}{7}
=1+\frac{2}{3}+\frac{3}{2}+\frac{1}{2}+\frac{5}{6}+\frac{3}{2}+1
=7
\end{align}$$

:::

---


#### 他の数字（7個→6個）で試してみる

:::{.callout-note icon=false}
## $n=6$ のとき

$$\frac{1}{\fbox{ア}}+\frac{2}{\fbox{イ}}+\frac{3}{\fbox{ウ}}+\frac{4}{\fbox{エ}}+\frac{5}{\fbox{オ}}+\frac{6}{\fbox{カ}}=6$$
:::

```js
using Combinatorics

X = [i for i =1:9] |> x->permutations(x,6)
Y = []
for x ∈ X
    if sum(i//x[i] for i=1:6) == 6
        push!(Y,x)
    end
end
Y
```

```{julia}
#| code-fold: false
#| code-summary: "Show the code"
using Combinatorics

X = [i for i =1:9] |> x->permutations(x,6)
Y = []
for x ∈ X
    if sum(i//x[i] for i=1:6) == 6
        push!(Y,x)
    end
end
Y
```

---


#### さらに拡張してみる（n=1から9）（定義）

:::{.callout-note icon=false}
#### 拡張
- $n=1,2,3,...,9$
- $x_1$〜$x_n$は1〜9の数が入り，重複はありません。

$$\frac{1}{x_1}+\frac{2}{x_2}+\cdots+\frac{n}{x_n}=n$$

:::

---


#### さらに拡張してみる（コード）


```js
using Combinatorics

function c(n)
    X = [i for i =1:9] |> x->permutations(x,n)
    Y = []
    for x ∈ X
        if sum(i//x[i] for i=1:n) == n
            push!(Y,x)
        end
    end
    Y |> length
end

for i = 1:9
    print("$(c(i)),")
end
```


```{julia}
#| code-fold: false
#| code-summary: "Show the code"
using Combinatorics

function c(n)
    X = [i for i =1:9] |> x->permutations(x,n)
    Y = []
    for x ∈ X
        if sum(i//x[i] for i=1:n) == n
            push!(Y,x)
        end
    end
    Y |> length
end

for i = 1:9
    print("$(c(i)),")
end
```
---

#### オンライン整数大辞典（OEIS）とは
オンライン整数大辞典（OEIS: The On-Line Encyclopedia of Integer Sequences）は、整数列（数列）のデータベースであり、数学的に興味深い整数列を集めて整理したものです。1964年にニール・スローン（Neil Sloane）によって始められ、現在も世界中の数学者や愛好家によって更新・拡充されています。

---

#### OEIS の特徴

1. 膨大な数列データベース
    - 30万以上の整数列が登録されており、新しい数列も日々追加されています。
2. 検索機能
    - キーワードや数列の最初のいくつかの値を入力すると、それに該当する数列を検索できます。
  
---

3. 各数列の詳細情報
	- 定義や数学的性質
	- 関連する数列
	- 生成規則（漸化式、母関数など）
	- 計算プログラム（Python, Maple, Mathematica, Julia など）
	- 文献や参考資料
4. 数学・物理・工学など広範な応用
	- フィボナッチ数列、カタラン数、ベル数などの有名な数列から、暗号理論や組み合わせ論に関連するものまで幅広い分野で利用されています。

---

5. ユーザー投稿型
	- 誰でも新しい数列を投稿でき、既存の数列にコメントや補足情報を追加することも可能です。

---

#### OEIS の活用方法

- 数列の正体を調べる
    → 例：「1, 2, 5, 14, 42, …」を検索すると、カタラン数列（A000108）であることがわかる。
- 数学の研究や教育に活用する
    → 未解決問題のヒントや、新しいパターンの発見に役立つ。
- プログラムの検証
    → 数列を生成するプログラムが正しく動作しているか、既存のデータと照らし合わせて確認できる。

---

#### OEISへ数列の登録
数列が出てくると[オンライン整数大辞典(OEIS)](https://oeis.org)で調べたくなります。そして調べたときに，「その数列はないよ。登録する？」と表示されたときはチャンスです！みなさん，登録にチャレンジしてみましょう！

![](003.png)

---


#### OEISのメンター
アカウントを作って登録すると，メンターがいろいろ提案してくれます。


:::{.callout-tip icon=false}
## 提案 [Michel Marcus](https://oeis.org/wiki/User:Michel_Marcus)さんから
「数列はc(n)じゃなくてa(n)がいいよ。この数列はこれで終わり？有限？」

:::


:::{.callout-tip icon=false}
## 回答 Dan Shimizu
「シーケンスはc(n)からa(n)に変更しました。このシーケンスは有限ですが、拡張できます。現在、1桁の数字1から9までからn個の整数を選択し、それらを順列に並べることによって形成されています。しかし、これは代わりに1からmまでの数字を選択することで一般化できます。mの値ごとに、有限列が生成できると思います。」
:::

---


#### 三角形の行で読み取るシーケンス

:::{.callout-caution icon=false}
## 注意・提案 [Andrew Howroyd](https://oeis.org/wiki/User:Andrew_Howroyd) さん
- 「ASCII文字のみにしてください。（特別な下付き文字/上付き文字ではありません）」

- n=1...9からの制限が取り除かれれば、これははるかに良いだろうと考えます。それはどのように数字を変えますか？それ以外の場合は、n がシーケンスの長さであり、数字が 1..k. から選択される三角形 T(n,k) を作成します。 (これはあなたが持っているものに最も近いでしょう)

- 例のセクションは醜いです。（結果のプレゼンテーションを無視することはできません）。プログラムから配列を出力するだけではありません。例：a(3) = 3の解は1/1 + 2/2 + 3/3 = 1/1 + 2/4 + 3/2 = 1/2 + 2/1 + 3/6 = 3です。目に優しいと思います。
:::

---

#### 三角形の行で読み取るシーケンス

:::{.callout-important  icon=false}
## 定義 Dan Shimizu 
三角形の行で読み取るシーケンス： $T(n,k)$ 

- $n$行目には$n$個の数字が並びます。

- $n$行目の$k$番目の数字は

$$ \frac{1}{x_1} + \frac{2}{x_2} + \cdots + \frac{k}{x_k} = k $$ 

となる順列$(x_1,\,x_2,\,...,\,x_k)$の個数です。
ただし，$x_1,\,x_2,\,...,\,x_k$は$1$以上$n$以下の異なる値です。

:::

---

#### T(n,k)のテーブルを作成

:::{.callout-important icon=false}
## テーブル Andrew Howroyd さん
|T(n,k)|k = 1..n|
|:---:|:---|
|T(1,k)|1;|
|T(2,k)|1, 1;|
|T(3,k)|1, 1, 1;|
|T(4,k)|1, 1, 2, 1;|
|T(5,k)|1, 1, 2, 1, 1;|
|T(6,k)|1, 1, 3, 3, 4, 1;|
|T(7,k)|1, 1, 3, 3, 4, 1, 1;|
|T(8,k)|1, 1, 3, 5, 10, 11, 12, 1;|
|T(9,k)|1, 1, 3, 6, 16, 40, 54, 30, 1;|
:::

---


#### 数列が承認される！

承認された数列は[A378322](https://oeis.org/A378322)です。

流れをサラッと書いていますが，実はいろいろありました。こちらのサイトからご覧ください。

[https://zenn.dev/dannchu/articles/bd199a5c014988](https://zenn.dev/dannchu/articles/bd199a5c014988)

